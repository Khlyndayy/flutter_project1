class MockDataService {
  static List<Map<String, dynamic>> users = [
    {
      'id': 1,
      'email': 'nguyenvana@example.com',
      'password': '123456',
      'name': 'Nguy·ªÖn VƒÉn An',
      'avatar_url': null,
      'created_at': '2024-01-15T10:30:00Z',
      'recipe_count': 2,
      'like_count': 48,
      'streak_count': 7,
    }
  ];

  static List<Map<String, dynamic>> recipes = [
    {
      'id': 1,
      'emoji': 'üçú',
      'title': 'Ph·ªü B√≤ Truy·ªÅn Th·ªëng',
      'description': 'M√≥n ph·ªü truy·ªÅn th·ªëng v·ªõi n∆∞·ªõc d√πng ƒë∆∞·ª£c ninh t·ª´ x∆∞∆°ng b√≤',
      'prep_time': 30,
      'cook_time': 180,
      'created_by': 1,
      'author_name': 'Nguy·ªÖn VƒÉn An',
      'created_at': '2024-01-20T14:30:00Z',
      'ingredients': [
        {'name': 'X∆∞∆°ng b√≤', 'quantity': '1', 'unit': 'kg'},
        {'name': 'Th·ªãt b√≤', 'quantity': '300', 'unit': 'gram'},
        {'name': 'B√°nh ph·ªü', 'quantity': '500', 'unit': 'gram'},
        {'name': 'H√†nh t√¢y', 'quantity': '2', 'unit': 'c·ªß'},
        {'name': 'Rau th∆°m', 'quantity': '1', 'unit': 'b√≥'},
      ],
      'steps': [
        'Ninh x∆∞∆°ng b√≤ v·ªõi h√†nh t√¢y, g·ª´ng trong 3 ti·∫øng ƒë·ªÉ c√≥ n∆∞·ªõc d√πng trong',
        'Lu·ªôc b√°nh ph·ªü trong n∆∞·ªõc s√¥i 2-3 ph√∫t, v·ªõt ra ƒë·ªÉ r√°o',
        'Th√°i th·ªãt b√≤ m·ªèng, chu·∫©n b·ªã rau th∆°m',
        'Tr√¨nh b√†y b√°nh ph·ªü, th·ªãt b√≤, chan n∆∞·ªõc d√πng n√≥ng v√† th∆∞·ªüng th·ª©c',
      ],
      'category': 'main',
    },
    {
      'id': 2,
      'emoji': 'üç±',
      'title': 'C∆°m T·∫•m S∆∞·ªùn N∆∞·ªõng',
      'description': 'C∆°m t·∫•m s∆∞·ªùn n∆∞·ªõng th∆°m ngon',
      'prep_time': 15,
      'cook_time': 45,
      'created_by': 1,
      'author_name': 'Nguy·ªÖn VƒÉn An',
      'created_at': '2024-01-18T09:15:00Z',
      'ingredients': [
        {'name': 'C∆°m t·∫•m', 'quantity': '500', 'unit': 'gram'},
        {'name': 'S∆∞·ªùn non', 'quantity': '300', 'unit': 'gram'},
        {'name': 'N∆∞·ªõc m·∫Øm', 'quantity': '3', 'unit': 'th√¨a'},
      ],
      'steps': [
        '∆Ø·ªõp s∆∞·ªùn v·ªõi n∆∞·ªõc m·∫Øm, t·ªèi, ƒë∆∞·ªùng trong 30 ph√∫t',
        'N∆∞·ªõng s∆∞·ªùn tr√™n than hoa ƒë·∫øn khi v√†ng ƒë·ªÅu',
        'Tr√¨nh b√†y c∆°m t·∫•m v·ªõi s∆∞·ªùn n∆∞·ªõng v√† ƒë·ªì chua',
      ],
      'category': 'main',
    },
    {
      'id': 3,
      'emoji': 'üßÅ',
      'title': 'B√°nh Cupcake Hoa',
      'description': 'B√°nh cupcake d·ªÖ th∆∞∆°ng cho ti·ªác tr√†',
      'prep_time': 20,
      'cook_time': 25,
      'created_by': 2,
      'author_name': 'Tr·∫ßn Th·ªã Mai',
      'created_at': '2024-01-22T16:45:00Z',
      'ingredients': [
        {'name': 'B·ªôt m√¨', 'quantity': '200', 'unit': 'gram'},
        {'name': 'ƒê∆∞·ªùng', 'quantity': '150', 'unit': 'gram'},
        {'name': 'Tr·ª©ng g√†', 'quantity': '3', 'unit': 'qu·∫£'},
        {'name': 'B∆°', 'quantity': '100', 'unit': 'gram'},
      ],
      'steps': [
        'ƒê√°nh b√¥ng b∆° v·ªõi ƒë∆∞·ªùng',
        'Th√™m tr·ª©ng t·ª´ng qu·∫£ m·ªôt v√† ƒë√°nh ƒë·ªÅu',
        'Cho b·ªôt m√¨ v√†o tr·ªôn nh·∫π',
        'N∆∞·ªõng ·ªü 180 ƒë·ªô trong 25 ph√∫t',
      ],
      'category': 'dessert',
    },
  ];

  // ===== USER MANAGEMENT =====
  static Map<String, dynamic>? register(String email, String password, String name) {
    if (users.any((user) => user['email'] == email)) {
      return null;
    }

    final newUser = {
      'id': users.length + 1,
      'email': email,
      'password': password,
      'name': name,
      'avatar_url': null,
      'created_at': DateTime.now().toIso8601String(),
      'recipe_count': 0,
      'like_count': 0,
      'streak_count': 0,
    };

    users.add(newUser);
    return newUser;
  }

  static Map<String, dynamic>? login(String email, String password) {
    try {
      return users.firstWhere(
        (user) => user['email'] == email && user['password'] == password,
      );
    } catch (e) {
      return null;
    }
  }

  // ===== RECIPE MANAGEMENT =====
  static List<Map<String, dynamic>> getAllRecipes() {
    return recipes;
  }

  static List<Map<String, dynamic>> getUserRecipes(int userId) {
    return recipes.where((recipe) => recipe['created_by'] == userId).toList();
  }

  static List<Map<String, dynamic>> getRecipesByCategory(String category) {
    if (category == 'all') return recipes;
    return recipes.where((recipe) => recipe['category'] == category).toList();
  }

  static void addRecipe(Map<String, dynamic> recipe) {
    final newRecipe = {
      'id': recipes.length + 1,
      'created_at': DateTime.now().toIso8601String(),
      ...recipe,
    };
    recipes.add(newRecipe);
  }

  static void updateRecipe(int id, Map<String, dynamic> updates) {
    final index = recipes.indexWhere((recipe) => recipe['id'] == id);
    if (index != -1) {
      recipes[index] = {...recipes[index], ...updates};
    }
  }

  static void deleteRecipe(int id) {
    recipes.removeWhere((recipe) => recipe['id'] == id);
  }

  static Map<String, dynamic>? getRecipeById(int id) {
    try {
      return recipes.firstWhere((recipe) => recipe['id'] == id);
    } catch (e) {
      return null;
    }
  }
}